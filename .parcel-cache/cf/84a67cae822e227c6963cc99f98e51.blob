var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            movies: [
                {
                    _id: 1,
                    Title: 'Captain America',
                    Description: 'Steve Rogers, a rejected military soldier, transforms into Captain America after taking a dose of a "Super-Soldier serum". But being Captain America comes at a price as he attempts to take down a war monger and a terrorist organization.',
                    ImagePath: 'https://m.media-amazon.com/images/M/MV5BMTYzOTc2NzU3N15BMl5BanBnXkFtZTcwNjY3MDE3NQ@@._V1_UX182_CR0,0,182,268_AL_.jpg'
                },
                {
                    _id: 2,
                    Title: 'The Shawshank Redemption',
                    Description: 'desc2...',
                    ImagePath: '...'
                },
                {
                    _id: 3,
                    Title: 'Gladiator',
                    Description: 'desc3...',
                    ImagePath: '...'
                }
            ],
            selectedMovie: null
        };
    }
    setSelectedMovie(newSelectedMovie) {
        this.setState({
            selectedMovie: newSelectedMovie
        });
    }
    // simplified with ternary operator
    render() {
        const { movies , selectedMovie  } = this.state;
        if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 30
            },
            __self: this
        }, "The list is empty!"));
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 33
            },
            __self: this
        }, selectedMovie ? /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
            movie: selectedMovie,
            onBackClick: (newSelectedMovie)=>{
                this.setSelectedMovie(newSelectedMovie);
            },
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 35
            },
            __self: this
        }) : movies.map((movie)=>/*#__PURE__*/ _reactDefault.default.createElement(_movieCard.MovieCard, {
                key: movie._id,
                movie: movie,
                onMovieClick: (movie1)=>{
                    this.setSelectedMovie(movie1);
                },
                __source: {
                    fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                    lineNumber: 37
                },
                __self: this
            })
        )));
    }
}

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}