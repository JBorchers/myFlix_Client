var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _loginView = require("../login-view/login-view");
var _registrationView = require("../registration-view/registration-view");
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
class MainView extends _reactDefault.default.Component {
    // Initial state is set to null
    constructor(){
        super();
        this.state = {
            movies: [],
            selectedMovie: null,
            user: null
        };
    }
    componentDidMount() {
        _axiosDefault.default.get('https://borchers-movie-api.herokuapp.com/movies').then((response)=>{
            this.setState({
                movies: response.data
            });
        }).catch((error)=>{
            console.log(error);
        });
    }
    // When a movie is clicked, this function is invoked and updates the state of the `selectedMovie` property to that movie
    setSelectedMovie(movie) {
        this.setState({
            selectedMovie: movie
        });
    }
    // a method passed as a prop
    // when a user successfully logs in, this function updates the `user` property in state to that particular user
    onLoggedIn(user) {
        this.setState({
            user
        });
    }
    // simplified with ternary operator
    render() {
        const { movies , selectedMovie , user  } = this.state;
        // if there is no user, the LoginView is rendered
        // if user is loggin in, user details are passed as a prop to the LoginView
        if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
            onLoggedIn: (user1)=>this.onLoggedIn(user1)
            ,
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 54
            },
            __self: this
        }));
        if (this.state.user === null) return(/*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
            onLoggedIn: (user1)=>this.onLoggedIn(user1)
            ,
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 57
            },
            __self: this
        }));
        // Before the movies have been loaded
        if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 60
            },
            __self: this
        }));
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 63
            },
            __self: this
        }, selectedMovie ? /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
            movie: selectedMovie,
            onBackClick: (newSelectedMovie)=>{
                this.setSelectedMovie(newSelectedMovie);
            },
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                lineNumber: 68
            },
            __self: this
        }) : movies.map((movie)=>/*#__PURE__*/ _reactDefault.default.createElement(_movieCard.MovieCard, {
                key: movie._id,
                movie: movie,
                onMovieClick: (newSelectedMovie)=>{
                    this.setSelectedMovie(newSelectedMovie);
                },
                __source: {
                    fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\main-view\\main-view.jsx",
                    lineNumber: 70
                },
                __self: this
            })
        )));
    }
}

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}