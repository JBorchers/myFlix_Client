var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "ProfileView", ()=>ProfileView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _reactBootstrap = require("react-bootstrap");
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _container = require("react-bootstrap/Container");
var _containerDefault = parcelHelpers.interopDefault(_container);
var _reactRouterDom = require("react-router-dom");
var _configJs = require("../../config.js");
var _configJsDefault = parcelHelpers.interopDefault(_configJs);
var _profileViewScss = require("./profile-view.scss");
var _s = $RefreshSig$();
function ProfileView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthdate, setBirthdate] = _react.useState('');
    // const [favoriteMovies] = useState('');
    // constructor(props) {
    //   super(props);
    //   this.state = {
    //     Username: "",
    //     Password: "",
    //     Email: "",
    //     Birthdate: "",
    //     FavoriteMovies: [],
    //     UsernameError: "",
    //     EmailError: "",
    //     PasswordError: "",
    //     BirthdateError: "",
    //   };
    // }
    // const { username, email, birthdate, movies, favoriteMovies } = userProfile;
    // componentDidMount() {
    //   let accessToken = localStorage.getItem('token');
    //   this.getUsers(accessToken);
    // }
    function getUsers(token) {
        let url = `${_configJsDefault.default.API_URL}/users/` + localStorage.getItem('user');
        _axiosDefault.default.get(url, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            // this.setState({
            //   Username: response.data.Username,
            //   Password: response.data.Password,
            //   Email: response.data.Email,
            //   Birthday: response.data.Birthday,
            //   FavoriteMovies: response.data.FavoriteMovies,
            // });
            console.log(response);
        }).catch(function(error) {
            console.log(error);
        });
    }
    // setUsername(input) {
    //   this.setState({
    //     username: input
    //   });
    // }
    // update user info
    function handleUpdate(e) {
        e.preventDefault();
        let token = localStorage.getItem("token");
        // console.log({ token });
        let user = localStorage.getItem("user");
        // console.log(this.state);
        // let setisValid = this.formValidation();
        // if (setisValid) {
        _axiosDefault.default.put(`${_configJsDefault.default.API_URL}/users/${user}`, {
            Username: username,
            Password: password,
            Email: email,
            Birthdate: birthdate
        }, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            const data = response.data;
            localStorage.setItem('user', data.Username);
            console.log(data);
            alert(user + " has been updated.");
            console.log(response);
        }).catch(function(error) {
            console.log(error.response.data);
        });
    }
    // remove favorite movie
    function removeFavorite(movie) {
        const token = localStorage.getItem('token');
        const user = localStorage.getItem('user');
        const url = // or movie.id?
        `${_configJsDefault.default.API_URL}/users/${movie._id}` + localStorage.getItem("user") + "/movies/" + movie._id;
        _axiosDefault.default.delete(url, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            console.log(response);
            // this.componentDidMount();
            location.reload();
            alert(movie.Title + " has been removed from your Favorites.");
        });
    }
    // delete account
    function handleDeregister() {
        const token = localStorage.getItem("token");
        const user = localStorage.getItem("user");
        _axiosDefault.default.delete(`${_configJsDefault.default.API_URL}/users/${user}`, {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then(()=>{
            alert(user + " has been deleted.");
            localStorage.removeItem("user");
            localStorage.removeItem("token");
            window.location.pathname = "/";
        }).catch(function(error) {
            console.log(error);
        });
    }
    const formValidation = ()=>{
        const usernameError = {
        };
        const emailError = {
        };
        const passwordError = {
        };
        const birhdateError = {
        };
        let isValid = true;
        if (username.trim().length < 5) {
            usernameError.usernameShort = "Must be alphanumeric and contains at least 5 characters";
            isValid = false;
        } else if (password.trim().length < 4) {
            passwordError.passwordMissing = "You must enter a password.(minimum 4 characters) ";
            isValid = false;
        } else if (!email.includes(".") || !email.includes("@")) {
            emailError.emailNotEmail = "A valid email address is required.";
            isValid = false;
        } else if (birthdate === '') {
            birhdateError.noBirthdate = "Please enter a birthdate";
            isValid = false;
        }
        return isValid;
    };
    // Filters the movies based on the favorite_movies (array of only movie IDs)
    // const filteredMovies = movies.filter(movie => {
    //   return favoriteMovies.indexOf(movie._id) >= 0;
    // });
    // render() {
    const { user , movies , favoriteMovies  } = props;
    // const { UsernameError, EmailError, PasswordError, BirthdateError } = this.state;
    // const FavoriteMovieList = movies.filter((movie) => {
    //   return this.state.FavoriteMovies.includes(movie._id);
    // });
    return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "userProfile",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 185
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_containerDefault.default, {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 186
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("h1", {
        className: "justify-content-md-center mb-30",
        md: 9,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 187
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: "glyphicon glyphicon-user",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 187
        },
        __self: this
    }), "Your Profile"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Row, {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 188
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
        md: 3,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 189
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
        md: 9,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 197
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("h5", {
        className: "justify-content-md-center mb-30",
        md: 9,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 198
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("span", {
        className: "glyphicon glyphicon-user",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 198
        },
        __self: this
    }), "Update Profile"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Form, {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 199
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 200
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 201
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 202
        },
        __self: this
    }, "Username:"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
        defaultValue: user,
        type: "text",
        onChange: (e)=>setUsername(e.target.value)
        ,
        placeholder: "Change username",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 203
        },
        __self: this
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 209
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 210
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 211
        },
        __self: this
    }, "Password:"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
        defaultValue: user,
        type: "password",
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 212
        },
        __self: this
    }))), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 216
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 217
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 218
        },
        __self: this
    }, "Email:"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
        defaultValue: user,
        type: "text",
        onChange: (e)=>setEmail(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 219
        },
        __self: this
    }))), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 223
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 224
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 225
        },
        __self: this
    }, "Birthdate:"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
        defaultValue: user,
        type: "text",
        onChange: (e)=>setBirthdate(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 226
        },
        __self: this
    })))), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
        type: "submit",
        className: "btn btn-primary mb-2",
        onClick: handleUpdate,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 241
        },
        __self: this
    }, "Update"), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
        className: "button",
        variant: "danger",
        onClick: handleDeregister,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 242
        },
        __self: this
    }, "Click Here to Deregister")), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
        md: 6,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 247
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        id: "favoriteMovies",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 248
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("h5", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
            lineNumber: 250
        },
        __self: this
    }, "Your Favorite Movies:"), favoriteMovies.map((movie)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card, {
            className: "shadow p-3 mb-5 bg-white rounded",
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 253
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Img, {
            variant: "top",
            src: movie.ImagePath,
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 254
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Body, {
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 255
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Title, {
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 256
            },
            __self: this
        }, movie.Title), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Text, {
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 257
            },
            __self: this
        }, movie.Description), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Card.Text, {
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 258
            },
            __self: this
        }, movie.ReleaseDate), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Link, {
            to: `/movies/${movie._id}`,
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 259
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
            variant: "link",
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 260
            },
            __self: this
        }, "Open")), /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Button, {
            onClick: ()=>removeFavorite(movie)
            ,
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\profile-view\\profile-view.jsx",
                lineNumber: 262
            },
            __self: this
        }, "Remove"))));
    })))))));
}
_s(ProfileView, "TD2fkD1Ab4Kck2JJHVZv+3f7f/8=");
_c = ProfileView;
// ProfileView.propTypes = {
//   movies: PropTypes.array.isRequired
// };
ProfileView.propTypes = {
    users: _propTypesDefault.default.shape({
        Username: _propTypesDefault.default.string.isRequired,
        Email: _propTypesDefault.default.string.isRequired,
        Birthdate: _propTypesDefault.default.string,
        FavoriteMovies: _propTypesDefault.default.array
    }),
    movies: _propTypesDefault.default.array.isRequired
};
var _c;
$RefreshReg$(_c, "ProfileView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}