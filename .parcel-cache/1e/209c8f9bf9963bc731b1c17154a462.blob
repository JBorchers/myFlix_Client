var helpers = require("../../../../../AppData/Roaming/nvm/v14.16.1/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "RegistrationView", ()=>RegistrationView
);
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _propTypes = require("prop-types");
var _propTypesDefault = parcelHelpers.interopDefault(_propTypes);
var _form = require("react-bootstrap/Form");
var _formDefault = parcelHelpers.interopDefault(_form);
var _button = require("react-bootstrap/Button");
var _buttonDefault = parcelHelpers.interopDefault(_button);
var _configJs = require("../../config.js");
var _configJsDefault = parcelHelpers.interopDefault(_configJs);
var _registrationViewScss = require("./registration-view.scss");
var _s = $RefreshSig$();
function RegistrationView(props) {
    _s();
    const [username, setUsername] = _react.useState('');
    const [password, setPassword] = _react.useState('');
    const [email, setEmail] = _react.useState('');
    const [birthdate, setBirthdate] = _react.useState('');
    const [usernameError, setUsernameError] = _react.useState({
    });
    const [emailError, setEmailError] = _react.useState({
    });
    const [passwordError, setPasswordError] = _react.useState({
    });
    const formValidation = ()=>{
        const usernameError1 = {
        };
        const emailError1 = {
        };
        const passwordError1 = {
        };
        const birhdateError = {
        };
        let isValid = true;
        if (username.trim().length < 5) {
            usernameError1.usernameShort = "Must be alphanumeric and contains at least 5 characters";
            isValid = false;
        } else if (password.trim().length < 4) {
            passwordError1.passwordMissing = "You must enter a password with a minimum of 4 characters ";
            isValid = false;
        } else if (!email.includes(".") || !email.includes("@")) {
            emailError1.emailNotEmail = "A valid email address is required.";
            isValid = false;
        } else if (birthdate === '') {
            birhdateError.noBirthdate = "Please enter a birthdate";
            isValid = false;
        }
        setUsernameError(usernameError1);
        setPasswordError(passwordError1);
        setEmailError(emailError1);
        return isValid;
    };
    const handleSubmit = (e)=>{
        e.preventDefault();
        let isValid = formValidation();
        if (isValid) {
            _axiosDefault.default.post(`${_configJsDefault.default.API_URL}/users`, {
                Username: username,
                Password: password,
                Email: email,
                Birthdate: birthdate
            }).then((response)=>{
                const data = response.data;
                console.log(data);
                window.open('/', '_self'); // the second argument '_self' is necessary so that the page will open in the current tab
                alert('You have sucessfully registered.');
            }).catch((e1)=>{
                console.log('error registering the user');
            });
            console.log(username, password, email, birthdate);
        // props.onRegister(username, password, email, birthdate);
        }
    };
    return(/*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default, {
        handleSubmit: handleSubmit,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 75
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 77
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 78
        },
        __self: this
    }, "Username:"), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "text",
        value: username,
        placeholder: "Enter a unique username",
        onChange: (e)=>setUsername(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 79
        },
        __self: this
    }), Object.keys(usernameError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            style: {
                color: "red"
            },
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
                lineNumber: 82
            },
            __self: this
        }, usernameError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 88
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 89
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 89
        },
        __self: this
    }, "Password:")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "password",
        value: password,
        placeholder: "Enter a Password",
        onChange: (e)=>setPassword(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 90
        },
        __self: this
    }), Object.keys(passwordError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            style: {
                color: "red"
            },
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
                lineNumber: 94
            },
            __self: this
        }, passwordError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 100
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 101
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 101
        },
        __self: this
    }, "Email:")), /*#__PURE__*/ _reactDefault.default.createElement(_formDefault.default.Control, {
        type: "email",
        value: email,
        placeholder: "Enter a valid Email (ex. user@email.com)",
        onChange: (e)=>setEmail(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 102
        },
        __self: this
    }), Object.keys(emailError).map((key)=>{
        return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            key: key,
            style: {
                color: "red"
            },
            __source: {
                fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
                lineNumber: 106
            },
            __self: this
        }, emailError[key]));
    })), /*#__PURE__*/ _reactDefault.default.createElement("div", {
        className: "form-group",
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 112
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("label", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 113
        },
        __self: this
    }, /*#__PURE__*/ _reactDefault.default.createElement("p", {
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 114
        },
        __self: this
    }, "Birthdate:"), /*#__PURE__*/ _reactDefault.default.createElement("input", {
        type: "date",
        value: birthdate,
        onChange: (e)=>setBirthdate(e.target.value)
        ,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 115
        },
        __self: this
    }))), /*#__PURE__*/ _reactDefault.default.createElement(_buttonDefault.default, {
        type: "submit",
        className: "btn btn-primary mb-2",
        onClick: handleSubmit,
        __source: {
            fileName: "C:\\Users\\Jordan\\Desktop\\myFlix_Client\\src\\components\\registration-view\\registration-view.jsx",
            lineNumber: 118
        },
        __self: this
    }, "Submit")));
}
_s(RegistrationView, "YoKWQTTn2fkiq3jz1qv5D0+dQEg=");
_c = RegistrationView;
RegistrationView.propTypes = {
    register: _propTypesDefault.default.shape({
        email: _propTypesDefault.default.string.isRequired,
        username: _propTypesDefault.default.string.isRequired,
        password: _propTypesDefault.default.string.isRequired,
        birthdate: _propTypesDefault.default.string
    })
};
var _c;
$RefreshReg$(_c, "RegistrationView");

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}